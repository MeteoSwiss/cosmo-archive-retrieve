[tool.poetry]
name = "cosmo-archive-retrieve"
# Keep only Major and Minor version in this configuration,
# the patch version is calculated when releasing the library
version = "1.0"
description = "Python library for extracting datasets from the COSMO archive as zarr."
authors = ["Carlos Osuna <carlos.osuna@meteoswiss.ch>"]
readme = "README.rst"
include = ["HISTORY.rst"]

[[tool.poetry.source]]
name = "pypi-mch"
url = "https://service.meteoswiss.ch/nexus/repository/python-all/simple"
priority = "default"

[[tool.poetry.source]]
name = "pypi-mch-publish"
url = "https://service.meteoswiss.ch/nexus/repository/python-mch/"

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
numcodecs = "*"
zarr = "*"
idpi = { git = "git@github.com:MeteoSwiss-APN/icon_data_processing_incubator.git", branch = "main" }

[tool.poetry.scripts]
pre-install = "cosmo_archive_retrieve.pre_install:main"

[tool.poetry.dev-dependencies]
Sphinx = "^7.2.6"
sphinx-autoapi = "^3.0.0"
pydata-sphinx-theme = "^0.14.1"
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pylint = "^3.0.2"
mypy = "^1.6.1"
types-setuptools = "^68.2.0.0"
yapf = "^0.40.2"
toml = "^0.10.2"
black = "24.3.0"

[tool.yapf]
based_on_style = "pep8"
column_limit = "120"

[tool.pylint.master]
disable = [
    'C0114', # missing-module-docstring
    'C0115', # missing-class-docstring
    'C0116', # missing-function-docstring
    'W0511', # fix me or to-do comments are already covered by SonarQube
]

[tool.pylint.format]
# Maximum number of lines in a module.
max-line-length = 120

[tool.pylint.design]
# Minimum number of public methods for a class (see R0903).
min-public-methods = 0

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true

[tool.coverage.run]
omit = ["test/**",  "doc/**"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
